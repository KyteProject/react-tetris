{"version":3,"sources":["images/bg.png","util/shapes.js","util/helpers.js","hooks/usePlayer.js","hooks/useStage.js","components/Cell.jsx","components/Stage.jsx","components/Display.jsx","components/StartButton.jsx","components/Tetris.jsx","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","SHAPES","0","shape","color","I","J","L","O","S","T","Z","randomShape","randShape","Math","floor","random","length","createStage","Array","from","fill","checkCollision","player","stage","_ref","moveX","x","moveY","y","pos","usePlayer","_useState","useState","collided","_useState2","Object","slicedToArray","setPlayer","rotate","matrix","dir","rotatedShape","map","_","index","col","row","reverse","resetPlayer","useCallback","console","log","stageWidth","prev","_objectSpread","clonedPlayer","JSON","parse","stringify","offset","useStage","setStage","_useState3","_useState4","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","cell","forEach","value","concat","reduce","ack","findIndex","unshift","push","sweepRows","StyledCell","styled","div","_templateObject","props","type","React","memo","react_default","a","createElement","data-cy","StyledStage","Stage_templateObject","height","width","Stage","id","components_Cell","key","StyledDisplay","Display_templateObject","gameOver","Display","text","StyledStartButton","button","StartButton_templateObject","StartButton","callback","onClick","StyledWrapper","Tetris_templateObject","bgImage","StyledTetris","_templateObject2","Tetris","dropTime","setDropTime","setGameOver","_usePlayer","_usePlayer2","updatePlayerPos","playerRotate","_useStage","_useStage2","_useGameStatus","score","setScore","rows","setRows","_useState5","_useState6","level","setLevel","linePoints","calcScore","useGameStatus","_useGameStatus2","movePlayer","drop","move","_ref2","keyCode","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","components_Stage","components_Display","components_StartButton","App","className","components_Tetris","render","react_router_dom","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e51c16e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";","export const SHAPES = {\r\n\t0: { shape: [ [ 0 ] ], color: '0, 0, 0' },\r\n\tI: {\r\n\t\tshape: [ [ 0, 'I', 0, 0 ], [ 0, 'I', 0, 0 ], [ 0, 'I', 0, 0 ], [ 0, 'I', 0, 0 ] ],\r\n\t\tcolor: '80, 227, 230'\r\n\t},\r\n\tJ: {\r\n\t\tshape: [ [ 0, 'J', 0 ], [ 0, 'J', 0 ], [ 'J', 'J', 0 ] ],\r\n\t\tcolor: '36, 95, 223'\r\n\t},\r\n\tL: {\r\n\t\tshape: [ [ 0, 'L', 0 ], [ 0, 'L', 0 ], [ 0, 'L', 'L' ] ],\r\n\t\tcolor: '223, 173, 36'\r\n\t},\r\n\tO: {\r\n\t\tshape: [ [ 'O', 'O' ], [ 'O', 'O' ] ],\r\n\t\tcolor: '223, 217, 36'\r\n\t},\r\n\tS: {\r\n\t\tshape: [ [ 0, 'S', 'S' ], [ 'S', 'S', 0 ], [ 0, 0, 0 ] ],\r\n\t\tcolor: '48, 211, 56'\r\n\t},\r\n\tT: {\r\n\t\tshape: [ [ 0, 0, 0 ], [ 'T', 'T', 'T' ], [ 0, 'T', 0 ] ],\r\n\t\tcolor: '132, 61, 198'\r\n\t},\r\n\tZ: {\r\n\t\tshape: [ [ 'Z', 'Z', 0 ], [ 0, 'Z', 'Z' ], [ 0, 0, 0 ] ],\r\n\t\tcolor: '227, 78, 78'\r\n\t}\r\n};\r\n\r\nexport const randomShape = () => {\r\n\tconst shapes = 'IJLOSTZ',\r\n\t\trandShape = shapes[ Math.floor( Math.random() * shapes.length ) ];\r\n\r\n\treturn SHAPES[ randShape ];\r\n};\r\n","/* eslint-disable operator-linebreak */\r\nexport const stageWidth = 12;\r\nexport const stageHeight = 20;\r\n\r\nexport const createStage = () => Array.from( Array( stageHeight ), () => new Array( stageWidth ).fill( [ 0, 'clear' ] ) );\r\n\r\nexport const checkCollision = ( player, stage, { x: moveX, y: moveY } ) => {\r\n\tfor ( let y = 0; y < player.shape.length; y += 1 ) {\r\n\t\tfor ( let x = 0; x < player.shape[ y ].length; x += 1 ) {\r\n\t\t\tif ( player.shape[ y ][ x ] !== 0 ) {\r\n\t\t\t\tif (\r\n\t\t\t\t\t!stage[ y + player.pos.y + moveY ] ||\r\n\t\t\t\t\t!stage[ y + player.pos.y + moveY ][ x + player.pos.x + moveX ] ||\r\n\t\t\t\t\tstage[ y + player.pos.y + moveY ][ x + player.pos.x + moveX ][ 1 ] !== 'clear'\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n","import { useState, useCallback } from 'react';\r\n\r\nimport { SHAPES, randomShape } from '../util/shapes';\r\nimport { stageWidth, checkCollision } from '../util/helpers';\r\n\r\nexport const usePlayer = () => {\r\n\tconst [ player, setPlayer ] = useState( {\r\n\t\tpos: { x: 0, y: 0 },\r\n\t\tshape: SHAPES[ '0' ].shape,\r\n\t\tcollided: false\r\n\t} );\r\n\r\n\tconst rotate = ( matrix, dir ) => {\r\n\t\tconst rotatedShape = matrix.map( ( _, index ) => matrix.map( col => col[ index ] ) );\r\n\r\n\t\tif ( dir > 0 ) {\r\n\t\t\treturn rotatedShape.map( row => row.reverse() );\r\n\t\t}\r\n\r\n\t\treturn rotatedShape.reverse();\r\n\t};\r\n\r\n\tconst playerRotate = ( stage, dir ) => {\r\n\t\tconst clonedPlayer = JSON.parse( JSON.stringify( player ) );\r\n\r\n\t\tclonedPlayer.shape = rotate( clonedPlayer.shape, dir );\r\n\r\n\t\tconst pos = clonedPlayer.pos.x;\r\n\r\n\t\tlet offset = 1;\r\n\r\n\t\twhile ( checkCollision( clonedPlayer, stage, { x: 0, y: 0 } ) ) {\r\n\t\t\tclonedPlayer.pos.x += offset;\r\n\t\t\toffset = -( offset + ( offset > 0 ? 1 : -1 ) );\r\n\t\t\tif ( offset > clonedPlayer.shape[ 0 ].length ) {\r\n\t\t\t\trotate( clonedPlayer.shape, -dir );\r\n\t\t\t\tclonedPlayer.pos.x = pos;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetPlayer( clonedPlayer );\r\n\t};\r\n\r\n\tconst updatePlayerPos = ( { x, y, collided } ) => {\r\n\t\tsetPlayer( prev => ( {\r\n\t\t\t...prev,\r\n\t\t\tpos: { x: ( prev.pos.x += x ), y: ( prev.pos.y += y ) },\r\n\t\t\tcollided\r\n\t\t} ) );\r\n\t};\r\n\r\n\tconst resetPlayer = useCallback( () => {\r\n\t\tconsole.log( 'reset player' );\r\n\t\tsetPlayer( {\r\n\t\t\tpos: { x: stageWidth / 2 - 2, y: 0 },\r\n\t\t\tshape: randomShape().shape,\r\n\t\t\tcollided: false\r\n\t\t} );\r\n\t}, [] );\r\n\r\n\treturn [ player, updatePlayerPos, resetPlayer, playerRotate ];\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { createStage } from '../util/helpers';\r\n\r\nexport const useStage = ( player, resetPlayer ) => {\r\n\tconst [ stage, setStage ] = useState( createStage() );\r\n\tconst [ rowsCleared, setRowsCleared ] = useState( 0 );\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tsetRowsCleared( 0 );\r\n\r\n\t\t\tconst sweepRows = newStage =>\r\n\t\t\t\tnewStage.reduce( ( ack, row ) => {\r\n\t\t\t\t\tif ( row.findIndex( cell => cell[ 0 ] === 0 ) === -1 ) {\r\n\t\t\t\t\t\tsetRowsCleared( prev => prev + 1 );\r\n\t\t\t\t\t\tack.unshift( new Array( newStage[ 0 ].length ).fill( [ 0, 'clear' ] ) );\r\n\t\t\t\t\t\treturn ack;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tack.push( row );\r\n\t\t\t\t\treturn ack;\r\n\t\t\t\t}, [] );\r\n\r\n\t\t\tconst updateStage = prevStage => {\r\n\t\t\t\t// First flush the stage\r\n\t\t\t\tconst newStage = prevStage.map( row => row.map( cell => ( cell[ 1 ] === 'clear' ? [ 0, 'clear' ] : cell ) ) );\r\n\r\n\t\t\t\t// Then draw the shape\r\n\t\t\t\tplayer.shape.forEach( ( row, y ) => {\r\n\t\t\t\t\trow.forEach( ( value, x ) => {\r\n\t\t\t\t\t\tif ( value !== 0 ) {\r\n\t\t\t\t\t\t\tnewStage[ y + player.pos.y ][ x + player.pos.x ] = [\r\n\t\t\t\t\t\t\t\tvalue,\r\n\t\t\t\t\t\t\t\t`${player.collided ? 'merged' : 'clear'}`\r\n\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Check if collided\r\n\t\t\t\tif ( player.collided ) {\r\n\t\t\t\t\tresetPlayer();\r\n\t\t\t\t\treturn sweepRows( newStage );\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn newStage;\r\n\t\t\t};\r\n\r\n\t\t\tsetStage( prev => updateStage( prev ) );\r\n\t\t},\r\n\t\t[ player, resetPlayer ]\r\n\t);\r\n\r\n\treturn [ stage, setStage, rowsCleared ];\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { SHAPES } from '../util/shapes';\r\n\r\nconst StyledCell = styled.div`\r\n\twidth: auto;\r\n\tbackground: rgba(${props => props.color}, 0.8);\r\n\tborder: ${props => ( props.type === 0 ? '0px solid' : '4px solid' )};\r\n\tborder-bottom-color: rgba(${props => props.color}, 0.1);\r\n\tborder-right-color: rgba(${props => props.color}, 1);\r\n\tborder-top-color: rgba(${props => props.color}, 1);\r\n\tborder-left-color: rgba(${props => props.color}, 0.3);\r\n`;\r\n\r\nconst Cell = ( { type, color } ) => <StyledCell type={type} color={SHAPES[ type ].color} data-cy=\"cell\" />;\r\n\r\nCell.propTypes = {\r\n\ttype: PropTypes.string.isRequired\r\n};\r\n\r\nexport default React.memo( Cell );\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport Cell from './Cell';\r\n\r\nexport const StyledStage = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-rows: repeat(${props => props.height}, calc(25vw / ${props => props.width}));\r\n\tgrid-template-columns: repeat(${props => props.width}, 1fr);\r\n\tgrid-gap: 1px;\r\n\tborder: 2px solid #333;\r\n\twidth: 100%;\r\n\tmax-width: 25vw;\r\n\tbackground: #111;\r\n`;\r\n\r\nconst Stage = ( { stage } ) => (\r\n\t<StyledStage width={stage[ 0 ].length} height={stage.length} id=\"stage\" data-cy=\"stage\">\r\n\t\t{stage.map( row => row.map( ( cell, x ) => <Cell key={x} type={cell[ 0 ]} /> ) )}\r\n\t</StyledStage>\r\n);\r\n\r\nStage.propTypes = {\r\n\tstage: PropTypes.arrayOf( PropTypes.array ).isRequired\r\n};\r\n\r\nexport default Stage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledDisplay = styled.div`\r\n\tbox-sizing: border-box;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tmargin: 0 0 20px 0;\r\n\tpadding: 20px;\r\n\tborder: 4px solid #333;\r\n\tmin-height: 30px;\r\n\twidth: 100%;\r\n\tborder-radius: 20px;\r\n\tcolor: ${props => ( props.gameOver ? 'red' : '#999' )};\r\n\tbackground: #000;\r\n\tfont-family: Pixel, Arial, Helvetica, sans-serif;\r\n\tfont-size: 0.8rem;\r\n`;\r\n\r\nconst Display = ( { gameOver, text } ) => <StyledDisplay>{text}</StyledDisplay>;\r\n\r\nDisplay.propTypes = {\r\n\ttext: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Display;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledStartButton = styled.button`\r\n\tbox-sizing: border-box;\r\n\tmargin: 0 0 20px 0;\r\n\tpadding: 20px;\r\n\tmin-height: 30px;\r\n\twidth: 100%;\r\n\tborder-radius: 20px;\r\n\tborder: none;\r\n\tcolor: white;\r\n\tbackground: #333;\r\n\tfont-family: Pixel, Arial, Helvetica, sans-serif;\r\n\tfont-size: 1rem;\r\n\toutline: none;\r\n\tcursor: pointer;\r\n`;\r\n\r\nconst StartButton = ( { callback } ) => (\r\n\t<StyledStartButton onClick={callback} data-cy=\"btn-start\">\r\n\t\tStart Game\r\n\t</StyledStartButton>\r\n);\r\n\r\nexport default StartButton;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { usePlayer } from './../hooks/usePlayer';\r\nimport { useStage } from './../hooks/useStage';\r\nimport { useInterval } from './../hooks/useInterval';\r\nimport { useGameStatus } from './../hooks/useGameStatus';\r\n\r\nimport Stage from './Stage';\r\nimport Dispay from './Display';\r\nimport StartButton from './StartButton';\r\nimport bgImage from '../images/bg.png';\r\nimport Display from './Display';\r\nimport { createStage, checkCollision } from './../util/helpers';\r\n\r\nconst StyledWrapper = styled.div`\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\tbackground: url(${bgImage}) #000;\r\n\tbackground-size: cover;\r\n\toverflow: hidden;\r\n`;\r\n\r\nconst StyledTetris = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: flex-start;\r\n\tpadding: 40px;\r\n\tmargin: 0 auto;\r\n\tmax-width: 900px;\r\n\taside {\r\n\t\twidth: 100%;\r\n\t\tmax-width: 200px;\r\n\t\tdisplay: block;\r\n\t\tpadding: 0 20px;\r\n\t}\r\n`;\r\n\r\nconst Tetris = () => {\r\n\tconst [ dropTime, setDropTime ] = useState( null ),\r\n\t\t[ gameOver, setGameOver ] = useState( false ),\r\n\t\t[ player, updatePlayerPos, resetPlayer, playerRotate ] = usePlayer(),\r\n\t\t[ stage, setStage, rowsCleared ] = useStage( player, resetPlayer ),\r\n\t\t[ score, setScore, rows, setRows, level, setLevel ] = useGameStatus( rowsCleared );\r\n\r\n\tconsole.log( 're-render' );\r\n\r\n\tconst movePlayer = dir => {\r\n\t\tif ( !checkCollision( player, stage, { x: dir, y: 0 } ) ) {\r\n\t\t\tupdatePlayerPos( { x: dir, y: 0 } );\r\n\t\t}\r\n\t};\r\n\r\n\tconst startGame = () => {\r\n\t\tsetStage( createStage() );\r\n\t\tsetDropTime( 1000 );\r\n\t\tresetPlayer();\r\n\t\tsetGameOver( false );\r\n\t\tsetScore( 0 );\r\n\t\tsetRows( 0 );\r\n\t\tsetLevel( 0 );\r\n\t};\r\n\r\n\tconst drop = () => {\r\n\t\tif ( rows > ( level + 1 ) * 5 ) {\r\n\t\t\tsetLevel( prev => prev + 1 );\r\n\t\t\tsetDropTime( 1000 / ( level + 1 ) + 200 );\r\n\t\t}\r\n\r\n\t\tif ( !checkCollision( player, stage, { x: 0, y: 1 } ) ) {\r\n\t\t\tupdatePlayerPos( { x: 0, y: 1, collided: false } );\r\n\t\t} else {\r\n\t\t\tif ( player.pos.y < 1 ) {\r\n\t\t\t\tconsole.log( 'Game over!' );\r\n\r\n\t\t\t\tsetGameOver( true );\r\n\t\t\t\tsetDropTime( null );\r\n\t\t\t}\r\n\t\t\tupdatePlayerPos( { x: 0, y: 0, collided: true } );\r\n\t\t}\r\n\t};\r\n\r\n\tconst keyUp = ( { keyCode } ) => {\r\n\t\tif ( !gameOver ) {\r\n\t\t\tif ( keyCode === 40 ) {\r\n\t\t\t\tsetDropTime( 1000 / ( level + 1 ) + 200 );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst dropPlayer = () => {\r\n\t\tsetDropTime( null );\r\n\t\tdrop();\r\n\t};\r\n\r\n\tconst move = ( { keyCode } ) => {\r\n\t\tif ( !gameOver ) {\r\n\t\t\tif ( keyCode === 37 ) {\r\n\t\t\t\t// left arrow\r\n\t\t\t\tmovePlayer( -1 );\r\n\t\t\t} else if ( keyCode === 39 ) {\r\n\t\t\t\t// right arrow\r\n\t\t\t\tmovePlayer( 1 );\r\n\t\t\t} else if ( keyCode === 40 ) {\r\n\t\t\t\t// down arrow\r\n\t\t\t\tdropPlayer();\r\n\t\t\t} else if ( keyCode === 38 ) {\r\n\t\t\t\t// up arrow\r\n\t\t\t\tplayerRotate( stage, 1 );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseInterval( () => {\r\n\t\tdrop();\r\n\t}, dropTime );\r\n\r\n\treturn (\r\n\t\t<StyledWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move( e )} onKeyUp={keyUp}>\r\n\t\t\t<StyledTetris>\r\n\t\t\t\t<Stage stage={stage} />\r\n\t\t\t\t<aside>\r\n\t\t\t\t\t{gameOver ? (\r\n\t\t\t\t\t\t<Display gameOver={gameOver} text=\"Game Over\" />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Dispay text={`Score: ${score}`} data-cy=\"score\" />\r\n\t\t\t\t\t\t\t<Dispay text={`Rows: ${rows}`} data-cy=\"rows\" />\r\n\t\t\t\t\t\t\t<Dispay text={`Level: ${level}`} data-cy=\"level\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<StartButton callback={startGame} />\r\n\t\t\t\t</aside>\r\n\t\t\t</StyledTetris>\r\n\t\t</StyledWrapper>\r\n\t);\r\n};\r\n\r\nexport default Tetris;\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n\tconst [ score, setScore ] = useState( 0 );\r\n\tconst [ rows, setRows ] = useState( 0 );\r\n\tconst [ level, setLevel ] = useState( 0 );\r\n\r\n\tconst linePoints = [ 40, 100, 300, 1200 ];\r\n\r\n\tconst calcScore = useCallback(\r\n\t\t() => {\r\n\t\t\tif ( rowsCleared > 0 ) {\r\n\t\t\t\tsetScore( prev => prev + linePoints[ rowsCleared - 1 ] * ( level + 1 ) );\r\n\t\t\t\tsetRows( prev => prev + rowsCleared );\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ level, linePoints, rowsCleared ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tcalcScore();\r\n\t\t},\r\n\t\t[ calcScore, rowsCleared, score ]\r\n\t);\r\n\r\n\treturn [ score, setScore, rows, setRows, level, setLevel ];\r\n};\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport const useInterval = ( callback, delay ) => {\r\n\tconst savedCallback = useRef();\r\n\t// Remember the latest callback.\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tsavedCallback.current = callback;\r\n\t\t},\r\n\t\t[ callback ]\r\n\t);\r\n\r\n\t// Set up the interval.\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst tick = () => {\r\n\t\t\t\tsavedCallback.current();\r\n\t\t\t};\r\n\r\n\t\t\tif ( delay !== null ) {\r\n\t\t\t\tconst id = setInterval( tick, delay );\r\n\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\tclearInterval( id );\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ delay ]\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport Tetris from './components/Tetris';\r\n\r\nconst App = () => (\r\n\t<div className=\"App\">\r\n\t\t<Tetris />\r\n\t</div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nrender(\r\n\t<Router>\r\n\t\t<App />\r\n\t</Router>,\r\n\tdocument.getElementById( 'root' )\r\n);\r\n"],"sourceRoot":""}